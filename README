
If you go to ebay and search for

stm32f103c8t6 board

you will find a plethera of folks selling a breakout board for a
couple bucks give or take.  There was Arduino support for this created
by someone and also at some point this was given the name "blue pill".
If you google

stm32 blue pill

you will find a number of websites on programming it or whatever.

This repo has NOTHING to do with that blue pill nor anything Arduino
these are baremetal examples without a library, this is about seeing
and learning the details so you can make your own library or so you
can read through others.

This repo is centered around this blue pill that doesnt yet have a
catchy name maybe blue pill two?  Search for

stm32f030f4p6 board

on ebal and you will see many vendors selling these boards as low
as less than a couple of dollars.  I have included a picture
ebay_board.png to show the specific one you are looking for.  It has
two four pin headers on the bottom one is uart based the other jtag.

I tend to buy two of everything, as every so often no matter how much
experience, you let some smoke out.  If you like the thing you might
turn one into a project for a while so that consumes that one.  The
free shipping ones tend to be months before it arrives, the pay for
shipping tend to be weeks.  Some sellers have 5 boards for a price
with one shipping cost (couple of bucks or less), that is about the
right balance between shipping cost, time to deliver, and how much
money you are risking losing if scammed.

Now there are a few more things I recommend, these are toolbox
items you will want for this and future projects.  One is a usb to
uart solution, FTDI pretty much dominates this type of market, the
board I have in mind I found currently with the search

ft232rl arduino

But what you are generally after is a 3.3v ftdi breakout board of some
kind, the arduino world used to not have and still some dont, power
so there was a standard header, and most of those are 5.0V but some
are 3.3V we want 3.3V here (should always read the documentation for
the part you are using to confirm this, eventually this will become
1.8V interfaces or other).  I have included the image ftdi_board.jpg.
But there are many solutions and not all are FTDI based, some are
not boards but cables with the uart built into the cable.

There is a newer looking blue one with a switch rather than a jumper
I think I paid under two dollars each for the ftdi_board.jpg ones,
probably bought 10 of them at a time.

The last thing required for the toolbox, if you have a breakout type
board are some jumper wires like these

https://www.sparkfun.com/products/8430

F/F in this case means female to female, which for the boards I have
are the correct ones.  If your ftdi/uart breakout is femal then you
will want M/F or male to female or female to male depending on how they
list it.  Can buy these on ebay much cheaper, probably adafruit as well.
You pay several times more for usb uart boards at sparkfun or adafruit
and pay a lot for shipping (if they could only solve the shipping problem
I can get stuff from arund the world here at a fraction of the shipping
cost from colorado), but your risk is low shipping is a little to a lot
faster.  I have stacks of little red sparkfun boxes, I do suppor them
and adafruit as well as ebay vendors.  I am still working off of one
or two 100 packs of jumper wires from sparkfun, M/M, M/F, F/F.

If you search ebay for

female female jumper wire

you find many solutions, most look like ribbon cables so I guess you have
to pull/rip the individual ones apart (some ribbon cables separate
better than others).  Or get them already separate.

An optional thing that may get discussed here is also very good for
your toolbox is an SWD (not really jtag) solution.  
The last thing and this is optional but still good for your toolbox is
an SWD (not really jtag) solution, the cortex-m supports a single
wire debug interface (SWD) which isnt a single wire but whatever
it is three wires at least SWDCLK, SWDIO and ground, since the world
can use 5.0V, 3.3V or 1.8 or others, there is also optionally a sense
line that is either sense or it directly drives the I/O of the part
to match what you have so for these boards (see jlink.jpg) there is a
VCC (TVCC) signal as well.  This is generally the case for JTAG type
stuff but there is a usb dongle that may power on that line instead
of sense so be careful.  The jlink name is actually stolen from Segger
who makes the real product which is about mid scale on price.  This
day and age there is no reason to be paying more than 10-20 dollars
for a jtag solution.  Some you are paying for faster speeds, but the
ftdi parts with mpsee are now up to 30Khz which for some
microcontrollers is already too fast.  Get the right ftdi breakout
board (one with mpsee which the popular FT232RL boards above do not
have) wire it up right and use openocd which I recommend anyway and
there you go, you saved up to thousands of dollars on a jtag solution.
So I assume these clone the jlink usb protocol.  One side of this board
is the SWD protocol defined by ARM, the other side needs to be a protocol
over usb between the host software and the board, this can be whatever
someone wants to invent.  Segger it may have a name but when you search
for j-link you are looking for real or clones (they also have $10
clones of the j-link with the full arm jtag cable on ebay which actually
work and will work with these boards but you have to get the right pins
connected).

The alternate solution is to get an stlink dongle, which I was very
dissapointed with, for less money you can get a full stm32 discovery
or nucleo board.  ST has countless numbers of these, at least one per
family, some are tiny sticks like the board above, others are wide
and can handle a full Arduino shield.  Those have what looks like a
board you can break off the top, I recommend one like that as the small
stick ones you might not be able to use as a debug header.  the ones
with the breakout are designed such that you can re-use that top
part with your projects not just the part on the larger portion of the
board, and you dont have to match cortex-m0 to cortex-m0 you can use a
cortex-m4 board stlink debuger on any of these stm32 cortex-m
microcontrollers.  Instead of speaking the j-link usb protocol they
speak the stlink usb protocol (of which there are a few versions now).
You remove a couple of jumpers to disconnect SWDIO and SWDCLK from the
chip on the board then use another header to connect to the blue board
read the docs for the STM32 board.  The stm32 discovery boards do not
normally have a break off debugger (note you never HAVE TO break this
off to use it) but have the jumpers, the same header, and can be used
in this application as well.

With the SWD solution, in particular the stlink solution since the
discovery/nucleo boards have power for the board/projects you can
power the blue board as well as hook it up to debug.  In some rare
cases the nucleo debug header can also be used as a usb to uart,
generally not though even though the pin labels and board layout
implies, you have to read the fine print in the ST doc, some even have
a solder bridge to connect/disconnect the debug header uart RX/TX
only to find that feature didnt work on that board.

You can find some FTDI boards that are just general breakout boards
or eval boards or are perhaps JTAG boards for full sized ARM chips
and you may find direct or indirect connections to the FTDI chip with
a little reading you can have one board that provides both SWD and uart
with one usb header.  Fully supported by openocd if wired right and
the uart side is a freebie as the parts or more correctly the drivers
tend to default to all uarts until you (software) repurposes one as
SWD or SPI or JTAG or I2C or custom. (MPSSE is very simple to program
and worth trying out for fun).
